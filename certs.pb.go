// Copyright (c) Abstract Machines
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: certs.proto

package certs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SerialNumber  string                 `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityReq) Reset() {
	*x = EntityReq{}
	mi := &file_certs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityReq) ProtoMessage() {}

func (x *EntityReq) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityReq.ProtoReflect.Descriptor instead.
func (*EntityReq) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{0}
}

func (x *EntityReq) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type EntityRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityRes) Reset() {
	*x = EntityRes{}
	mi := &file_certs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityRes) ProtoMessage() {}

func (x *EntityRes) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityRes.ProtoReflect.Descriptor instead.
func (*EntityRes) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{1}
}

func (x *EntityRes) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type RevokeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeReq) Reset() {
	*x = RevokeReq{}
	mi := &file_certs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeReq) ProtoMessage() {}

func (x *RevokeReq) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeReq.ProtoReflect.Descriptor instead.
func (*RevokeReq) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{2}
}

func (x *RevokeReq) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type Cert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SerialNumber  string                 `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Certificate   string                 `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Revoked       bool                   `protobuf:"varint,4,opt,name=revoked,proto3" json:"revoked,omitempty"`
	ExpiryTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	EntityId      string                 `protobuf:"bytes,6,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	DownloadUrl   string                 `protobuf:"bytes,7,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cert) Reset() {
	*x = Cert{}
	mi := &file_certs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cert) ProtoMessage() {}

func (x *Cert) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cert.ProtoReflect.Descriptor instead.
func (*Cert) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{3}
}

func (x *Cert) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *Cert) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *Cert) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Cert) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *Cert) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryTime
	}
	return nil
}

func (x *Cert) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *Cert) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type CertificateBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ca            []byte                 `protobuf:"bytes,1,opt,name=ca,proto3" json:"ca,omitempty"`
	Certificate   []byte                 `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	PrivateKey    []byte                 `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertificateBundle) Reset() {
	*x = CertificateBundle{}
	mi := &file_certs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateBundle) ProtoMessage() {}

func (x *CertificateBundle) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateBundle.ProtoReflect.Descriptor instead.
func (*CertificateBundle) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{4}
}

func (x *CertificateBundle) GetCa() []byte {
	if x != nil {
		return x.Ca
	}
	return nil
}

func (x *CertificateBundle) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *CertificateBundle) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

type RetrieveCertReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DownloadToken string                 `protobuf:"bytes,1,opt,name=download_token,json=downloadToken,proto3" json:"download_token,omitempty"`
	SerialNumber  string                 `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveCertReq) Reset() {
	*x = RetrieveCertReq{}
	mi := &file_certs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveCertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCertReq) ProtoMessage() {}

func (x *RetrieveCertReq) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCertReq.ProtoReflect.Descriptor instead.
func (*RetrieveCertReq) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{5}
}

func (x *RetrieveCertReq) GetDownloadToken() string {
	if x != nil {
		return x.DownloadToken
	}
	return ""
}

func (x *RetrieveCertReq) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type RetrieveCertDownloadTokenReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	SerialNumber  string                 `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveCertDownloadTokenReq) Reset() {
	*x = RetrieveCertDownloadTokenReq{}
	mi := &file_certs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveCertDownloadTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCertDownloadTokenReq) ProtoMessage() {}

func (x *RetrieveCertDownloadTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCertDownloadTokenReq.ProtoReflect.Descriptor instead.
func (*RetrieveCertDownloadTokenReq) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{6}
}

func (x *RetrieveCertDownloadTokenReq) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *RetrieveCertDownloadTokenReq) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *RetrieveCertDownloadTokenReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RetrieveCertDownloadTokenRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveCertDownloadTokenRes) Reset() {
	*x = RetrieveCertDownloadTokenRes{}
	mi := &file_certs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveCertDownloadTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCertDownloadTokenRes) ProtoMessage() {}

func (x *RetrieveCertDownloadTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCertDownloadTokenRes.ProtoReflect.Descriptor instead.
func (*RetrieveCertDownloadTokenRes) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{7}
}

func (x *RetrieveCertDownloadTokenRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Options struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	CommonName          string                 `protobuf:"bytes,1,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Organizations       []string               `protobuf:"bytes,2,rep,name=organizations,proto3" json:"organizations,omitempty"`
	OrganizationalUnits []string               `protobuf:"bytes,3,rep,name=organizational_units,json=organizationalUnits,proto3" json:"organizational_units,omitempty"`
	Countries           []string               `protobuf:"bytes,4,rep,name=countries,proto3" json:"countries,omitempty"`
	Provinces           []string               `protobuf:"bytes,5,rep,name=provinces,proto3" json:"provinces,omitempty"`
	Localities          []string               `protobuf:"bytes,6,rep,name=localities,proto3" json:"localities,omitempty"`
	StreetAddresses     []string               `protobuf:"bytes,7,rep,name=street_addresses,json=streetAddresses,proto3" json:"street_addresses,omitempty"`
	PostalCodes         []string               `protobuf:"bytes,8,rep,name=postal_codes,json=postalCodes,proto3" json:"postal_codes,omitempty"`
	DnsNames            []string               `protobuf:"bytes,9,rep,name=dns_names,json=dnsNames,proto3" json:"dns_names,omitempty"`
	IpAddresses         []string               `protobuf:"bytes,10,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Options) Reset() {
	*x = Options{}
	mi := &file_certs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{8}
}

func (x *Options) GetCommonName() string {
	if x != nil {
		return x.CommonName
	}
	return ""
}

func (x *Options) GetOrganizations() []string {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *Options) GetOrganizationalUnits() []string {
	if x != nil {
		return x.OrganizationalUnits
	}
	return nil
}

func (x *Options) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *Options) GetProvinces() []string {
	if x != nil {
		return x.Provinces
	}
	return nil
}

func (x *Options) GetLocalities() []string {
	if x != nil {
		return x.Localities
	}
	return nil
}

func (x *Options) GetStreetAddresses() []string {
	if x != nil {
		return x.StreetAddresses
	}
	return nil
}

func (x *Options) GetPostalCodes() []string {
	if x != nil {
		return x.PostalCodes
	}
	return nil
}

func (x *Options) GetDnsNames() []string {
	if x != nil {
		return x.DnsNames
	}
	return nil
}

func (x *Options) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

type IssueCertReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DomainId       string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	EntityId       string                 `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EntityType     string                 `protobuf:"bytes,3,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	IpAddresses    []string               `protobuf:"bytes,4,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	UserId         string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ttl            string                 `protobuf:"bytes,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	SubjectOptions *Options               `protobuf:"bytes,7,opt,name=subject_options,json=subjectOptions,proto3" json:"subject_options,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *IssueCertReq) Reset() {
	*x = IssueCertReq{}
	mi := &file_certs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueCertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueCertReq) ProtoMessage() {}

func (x *IssueCertReq) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueCertReq.ProtoReflect.Descriptor instead.
func (*IssueCertReq) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{9}
}

func (x *IssueCertReq) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *IssueCertReq) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *IssueCertReq) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *IssueCertReq) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *IssueCertReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IssueCertReq) GetTtl() string {
	if x != nil {
		return x.Ttl
	}
	return ""
}

func (x *IssueCertReq) GetSubjectOptions() *Options {
	if x != nil {
		return x.SubjectOptions
	}
	return nil
}

type IssueCertRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SerialNumber  string                 `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueCertRes) Reset() {
	*x = IssueCertRes{}
	mi := &file_certs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueCertRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueCertRes) ProtoMessage() {}

func (x *IssueCertRes) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueCertRes.ProtoReflect.Descriptor instead.
func (*IssueCertRes) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{10}
}

func (x *IssueCertRes) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type GetCAReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCAReq) Reset() {
	*x = GetCAReq{}
	mi := &file_certs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCAReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCAReq) ProtoMessage() {}

func (x *GetCAReq) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCAReq.ProtoReflect.Descriptor instead.
func (*GetCAReq) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{11}
}

var File_certs_proto protoreflect.FileDescriptor

const file_certs_proto_rawDesc = "" +
	"\n" +
	"\vcerts.proto\x12\rabsmach.certs\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"0\n" +
	"\tEntityReq\x12#\n" +
	"\rserial_number\x18\x01 \x01(\tR\fserialNumber\"(\n" +
	"\tEntityRes\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\"(\n" +
	"\tRevokeReq\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\"\xf6\x01\n" +
	"\x04Cert\x12#\n" +
	"\rserial_number\x18\x01 \x01(\tR\fserialNumber\x12 \n" +
	"\vcertificate\x18\x02 \x01(\tR\vcertificate\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x18\n" +
	"\arevoked\x18\x04 \x01(\bR\arevoked\x12;\n" +
	"\vexpiry_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expiryTime\x12\x1b\n" +
	"\tentity_id\x18\x06 \x01(\tR\bentityId\x12!\n" +
	"\fdownload_url\x18\a \x01(\tR\vdownloadUrl\"f\n" +
	"\x11CertificateBundle\x12\x0e\n" +
	"\x02ca\x18\x01 \x01(\fR\x02ca\x12 \n" +
	"\vcertificate\x18\x02 \x01(\fR\vcertificate\x12\x1f\n" +
	"\vprivate_key\x18\x03 \x01(\fR\n" +
	"privateKey\"]\n" +
	"\x0fRetrieveCertReq\x12%\n" +
	"\x0edownload_token\x18\x01 \x01(\tR\rdownloadToken\x12#\n" +
	"\rserial_number\x18\x02 \x01(\tR\fserialNumber\"y\n" +
	"\x1cRetrieveCertDownloadTokenReq\x12\x1b\n" +
	"\tdomain_id\x18\x01 \x01(\tR\bdomainId\x12#\n" +
	"\rserial_number\x18\x02 \x01(\tR\fserialNumber\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"4\n" +
	"\x1cRetrieveCertDownloadTokenRes\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\xed\x02\n" +
	"\aOptions\x12\x1f\n" +
	"\vcommon_name\x18\x01 \x01(\tR\n" +
	"commonName\x12$\n" +
	"\rorganizations\x18\x02 \x03(\tR\rorganizations\x121\n" +
	"\x14organizational_units\x18\x03 \x03(\tR\x13organizationalUnits\x12\x1c\n" +
	"\tcountries\x18\x04 \x03(\tR\tcountries\x12\x1c\n" +
	"\tprovinces\x18\x05 \x03(\tR\tprovinces\x12\x1e\n" +
	"\n" +
	"localities\x18\x06 \x03(\tR\n" +
	"localities\x12)\n" +
	"\x10street_addresses\x18\a \x03(\tR\x0fstreetAddresses\x12!\n" +
	"\fpostal_codes\x18\b \x03(\tR\vpostalCodes\x12\x1b\n" +
	"\tdns_names\x18\t \x03(\tR\bdnsNames\x12!\n" +
	"\fip_addresses\x18\n" +
	" \x03(\tR\vipAddresses\"\xf8\x01\n" +
	"\fIssueCertReq\x12\x1b\n" +
	"\tdomain_id\x18\x01 \x01(\tR\bdomainId\x12\x1b\n" +
	"\tentity_id\x18\x02 \x01(\tR\bentityId\x12\x1f\n" +
	"\ventity_type\x18\x03 \x01(\tR\n" +
	"entityType\x12!\n" +
	"\fip_addresses\x18\x04 \x03(\tR\vipAddresses\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12\x10\n" +
	"\x03ttl\x18\x06 \x01(\tR\x03ttl\x12?\n" +
	"\x0fsubject_options\x18\a \x01(\v2\x16.absmach.certs.OptionsR\x0esubjectOptions\"3\n" +
	"\fIssueCertRes\x12#\n" +
	"\rserial_number\x18\x01 \x01(\tR\fserialNumber\"\n" +
	"\n" +
	"\bGetCAReq2\x96\x01\n" +
	"\fCertsService\x12C\n" +
	"\vGetEntityID\x12\x18.absmach.certs.EntityReq\x1a\x18.absmach.certs.EntityRes\"\x00\x12A\n" +
	"\vRevokeCerts\x12\x18.absmach.certs.RevokeReq\x1a\x16.google.protobuf.Empty\"\x00B\tZ\a./certsb\x06proto3"

var (
	file_certs_proto_rawDescOnce sync.Once
	file_certs_proto_rawDescData []byte
)

func file_certs_proto_rawDescGZIP() []byte {
	file_certs_proto_rawDescOnce.Do(func() {
		file_certs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_certs_proto_rawDesc), len(file_certs_proto_rawDesc)))
	})
	return file_certs_proto_rawDescData
}

var file_certs_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_certs_proto_goTypes = []any{
	(*EntityReq)(nil),                    // 0: absmach.certs.EntityReq
	(*EntityRes)(nil),                    // 1: absmach.certs.EntityRes
	(*RevokeReq)(nil),                    // 2: absmach.certs.RevokeReq
	(*Cert)(nil),                         // 3: absmach.certs.Cert
	(*CertificateBundle)(nil),            // 4: absmach.certs.CertificateBundle
	(*RetrieveCertReq)(nil),              // 5: absmach.certs.RetrieveCertReq
	(*RetrieveCertDownloadTokenReq)(nil), // 6: absmach.certs.RetrieveCertDownloadTokenReq
	(*RetrieveCertDownloadTokenRes)(nil), // 7: absmach.certs.RetrieveCertDownloadTokenRes
	(*Options)(nil),                      // 8: absmach.certs.Options
	(*IssueCertReq)(nil),                 // 9: absmach.certs.IssueCertReq
	(*IssueCertRes)(nil),                 // 10: absmach.certs.IssueCertRes
	(*GetCAReq)(nil),                     // 11: absmach.certs.GetCAReq
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                // 13: google.protobuf.Empty
}
var file_certs_proto_depIdxs = []int32{
	12, // 0: absmach.certs.Cert.expiry_time:type_name -> google.protobuf.Timestamp
	8,  // 1: absmach.certs.IssueCertReq.subject_options:type_name -> absmach.certs.Options
	0,  // 2: absmach.certs.CertsService.GetEntityID:input_type -> absmach.certs.EntityReq
	2,  // 3: absmach.certs.CertsService.RevokeCerts:input_type -> absmach.certs.RevokeReq
	1,  // 4: absmach.certs.CertsService.GetEntityID:output_type -> absmach.certs.EntityRes
	13, // 5: absmach.certs.CertsService.RevokeCerts:output_type -> google.protobuf.Empty
	4,  // [4:6] is the sub-list for method output_type
	2,  // [2:4] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_certs_proto_init() }
func file_certs_proto_init() {
	if File_certs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_certs_proto_rawDesc), len(file_certs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_certs_proto_goTypes,
		DependencyIndexes: file_certs_proto_depIdxs,
		MessageInfos:      file_certs_proto_msgTypes,
	}.Build()
	File_certs_proto = out.File
	file_certs_proto_goTypes = nil
	file_certs_proto_depIdxs = nil
}
