
networks:
  certs-base-net:

volumes:
  certs-db-volume:

services:
  certs:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        SVC: certs
        GOARCH: ${GOARCH}
        GOARM: ${GOARM}
        VERSION: ${VERSION}
        COMMIT: ${COMMIT}
        TIME: ${TIME}
    depends_on:
      - certs-db
    restart: on-failure
    environment:
      - AM_CERTS_LOG_LEVEL=${AM_CERTS_LOG_LEVEL}
      - AM_CERTS_DB_HOST=${AM_CERTS_DB_HOST}
      - AM_CERTS_DB_PORT=${AM_CERTS_DB_PORT}
      - AM_CERTS_DB_USER=${AM_CERTS_DB_USER}
      - AM_CERTS_DB_PASS=${AM_CERTS_DB_PASS}
      - AM_CERTS_DB=${AM_CERTS_DB}
      - AM_CERTS_DB_SSL_MODE=${AM_CERTS_DB_SSL_MODE}
      - AM_CERTS_HTTP_HOST=${AM_CERTS_HTTP_HOST}
      - AM_CERTS_HTTP_PORT=${AM_CERTS_HTTP_PORT}
      - AM_CERTS_GRPC_HOST=${AM_CERTS_GRPC_HOST}
      - AM_CERTS_GRPC_PORT=${AM_CERTS_GRPC_PORT}
    ports:
      - "${AM_CERTS_HTTP_PORT}:${AM_CERTS_HTTP_PORT}"
      - "${AM_CERTS_GRPC_PORT}:${AM_CERTS_GRPC_PORT}"
    volumes:
      - ./ssl:/ssl

  certs-db:
    image: postgres:16.2-alpine
    container_name: certs-db
    restart: on-failure
    environment:
      - POSTGRES_USER=${AM_CERTS_DB_USER}
      - POSTGRES_PASSWORD=${AM_CERTS_DB_PASS}
      - POSTGRES_DB=${AM_CERTS_DB}
    ports:
      - "5432:5432"
    volumes:
      - certs-db-volume:/var/lib/postgresql/data
