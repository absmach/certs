# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

name: Check the consistency of generated files

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-generated-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
          cache-dependency-path: "go.sum"

      - name: Check for changes in go.mod
        run: |
          go mod tidy
          git diff --exit-code

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v3
        id: changes
        with:
            base: main
            filters: |
              proto:
                - ".github/workflows/check-generated-files.yml"
                
              mocks:
                - ".github/workflows/check-generated-files.yml"
                - "sdk/mocks/sdk.go"
                - "mocks/repository.go"
                - "mocks/service.go"

                - name: Set up protoc
                if: steps.changes.outputs.proto == 'true'
                run: |
                  PROTOC_VERSION=27.2
                  PROTOC_GEN_VERSION=v1.34.2
                  PROTOC_GRPC_VERSION=v1.4.0
        
                  # Download and install protoc
                  PROTOC_ZIP=protoc-$PROTOC_VERSION-linux-x86_64.zip
                  curl -0L -o $PROTOC_ZIP https://github.com/protocolbuffers/protobuf/releases/download/v$PROTOC_VERSION/$PROTOC_ZIP
                  unzip -o $PROTOC_ZIP -d protoc3
                  sudo mv protoc3/bin/* /usr/local/bin/
                  sudo mv protoc3/include/* /usr/local/include/
                  rm -rf $PROTOC_ZIP protoc3
        
                  # Install protoc-gen-go and protoc-gen-go-grpc
                  go install google.golang.org/protobuf/cmd/protoc-gen-go@$PROTOC_GEN_VERSION
                  go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@$PROTOC_GRPC_VERSION
        
                  # Add protoc to the PATH
                  export PATH=$PATH:/usr/local/bin/protoc
        
              - name: Check Protobuf is up to Date
                if: steps.changes.outputs.proto == 'true'
                run: |
                  for p in $(find . -name "*.pb.go"); do
                    mv $p $p.tmp
                  done
        
                  make proto
        
                  for p in $(find . -name "*.pb.go"); do
                    if ! cmp -s $p $p.tmp; then
                      echo "Error: Proto file and generated Go file $p are out of sync!"
                      echo "Please run 'make proto' with protoc version $PROTOC_VERSION, protoc-gen-go version $PROTOC_GEN_VERSION and protoc-gen-go-grpc version $PROTOC_GRPC_VERSION and commit the changes."
                      exit 1
                    fi
                  done
        
              - name: Check Mocks are up to Date
                if: steps.changes.outputs.mocks == 'true'
                run: |
                  MOCKERY_VERSION=v2.43.2
                  STRINGER_VERSION=v0.19.0
        
                  go install github.com/vektra/mockery/v2@$MOCKERY_VERSION
                  go install golang.org/x/tools/cmd/stringer@$STRINGER_VERSION
        
                  mv ./sdk/mocks/sdk.go ./sdk/mocks/sdk.go.tmp
                  mv ./mocks/repository.go ./mocks/repository.go.tmp
                  mv ./mocks/service.go ./mocks/service.go.tmp
        
                  make mocks
        
                  check_mock_changes() {
                    local file_path=$1
                    local tmp_file_path=$1.tmp
                    local entity_name=$2
        
                    if ! cmp -s "$file_path" "$tmp_file_path"; then
                      echo "Error: Generated mocks for $entity_name are out of sync!"
                      echo "Please run 'make mocks' with mockery version $MOCKERY_VERSION and commit the changes."
                      exit 1
                    fi
                  }
        
                  check_mock_changes ./sdk/mocks/sdk.go "SDK ./sdk/mocks/sdk.go"
                  check_mock_changes ./mocks/repository.go "Certs Repository ./mocks/repository.go"
                  check_mock_changes ./mocks/service.go "Certs Service ./mocks/service.go"
